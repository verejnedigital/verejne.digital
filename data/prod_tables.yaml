1_rpo:
    source_schema: "ekosystem_rpo"
    command: "
        SELECT DISTINCT ON(organizations.id)
          organizations.id AS org_id,
          organization_identifier_entries.ipo AS ico,
          organization_name_entries.name,
          organizations.established_on,
          organizations.terminated_on,
          concat_ws(' ',
            organization_address_entries.formatted_address,
            organization_address_entries.street,
            COALESCE(
              organization_address_entries.building_number,
              cast(organization_address_entries.reg_number AS text)
            ),
            organization_address_entries.postal_code,
            organization_address_entries.municipality,
            organization_address_entries.country
          ) AS address,
          organization_legal_form_entries.legal_form_id AS legal_form_id
        FROM
          organizations,
          organization_identifier_entries,
          organization_name_entries,
          organization_address_entries,
          organization_legal_form_entries
        WHERE
          organizations.id=organization_identifier_entries.organization_id
          AND
          organizations.id=organization_name_entries.organization_id
          AND
          organizations.id=organization_address_entries.organization_id
          AND
          organizations.id=organization_legal_form_entries.organization_id
        "
    save_org_id: true
    tables:
            CompanyInfo:
                    columns: ["ico", "established_on",
                              "terminated_on", "legal_form_id"]
                    create_command: "
                       CREATE TABLE CompanyInfo (
                                id SERIAL PRIMARY KEY,
                                eid INTEGER REFERENCES Entities(id),
                                ico INT8,
                                established_on DATE,
                                terminated_on DATE,
                                legal_form_id INTEGER
                       );
                       CREATE UNIQUE INDEX ON CompanyInfo(eid);
                       CREATE UNIQUE INDEX ON CompanyInfo(ico);
                    "

2_related:
    source_schema: "ekosystem_rpo"
    command:   "
        SELECT
          organization_id as eid_relation,
          stakeholder_type_id,
          ico,
          concat_ws(' ',
            full_name, person_given_name, person_family_name
          ) AS name,
          concat_ws(' ',
            address_formatted,
            address_street,
            COALESCE(address_building_number, cast(address_reg_number as text)),
            address_postal_code,
            address_municipality,
            address_country
          ) AS address,
          effective_from,
          effective_to
        FROM organization_stakeholder_entries
        UNION
        SELECT
          organization_id as org_id,
          stakeholder_type_id,
          ico,
          concat_ws(' ',
            full_name, person_given_name, person_family_name
          ) AS name,
          concat_ws(' ',
            address_formatted,
            address_street,
            COALESCE(address_building_number, cast(address_reg_number as text)),
            address_postal_code,
            address_municipality,
            address_country
          ) AS address,
          effective_from,
          effective_to
        FROM
          organization_statutory_entries
        "
    use_org_id_as_eid_relation: true
    tables:
            Related:
                    columns: [
                      "stakeholder_type_id",
                      "eid_relation",
                      "effective_from",
                      "effective_to"
                    ]
                    create_command: "
                       CREATE TABLE Related (
                                id SERIAL PRIMARY KEY,
                                eid INTEGER REFERENCES Entities(id),
                                stakeholder_type_id INT4,
                                effective_from date,
                                effective_to date,
                                eid_relation INTEGER REFERENCES Entities(id)
                       );
                       CREATE INDEX ON Related(eid);
                       CREATE INDEX ON Related(eid_relation);
                       CREATE UNIQUE INDEX ON Related(eid,stakeholder_type_id,eid_relation)
                    "

3_notices:
    source_schema: "ekosystem_VVO"
    command:   "select notices.id as notice_id,notices.contract_id,notices.title,notices.contracting_authority_name as name,notices.contracting_authority_cin as ico,notices.estimated_value_amount,notices.estimated_value_currency,notices.bulletin_issue_id,notices.notice_type_id,result_notices.short_description,result_notices.total_final_value_amount,result_notices.total_final_value_currency,raw_notices.body,notice_suppliers.cin as supplier_ico,notice_suppliers.name as supplier_name from notices FULL OUTER JOIN result_notices ON result_notices.raw_notice_id = notices.raw_notice_id FULL OUTER JOIN raw_notices ON raw_notices.id=notices.raw_notice_id FULL OUTER JOIN notice_suppliers ON notice_suppliers.notice_id = notices.id ORDER BY notices.bulletin_issue_id DESC"
    extract_description_from_body: true
    supplier_eid: true
    tables:
            Notices:
                    columns: ["notice_id", "contract_id", "title", "estimated_value_amount",
                    "estimated_value_currency", "bulletin_issue_id", "notice_type_id",
                    "short_description", "total_final_value_amount",
                    "total_final_value_currency", "body"]
                    create_command: "
                       CREATE TABLE Notices (
                                id SERIAL PRIMARY KEY,
                                eid INTEGER REFERENCES Entities(id),
                                supplier_eid INTEGER REFERENCES Entities(id),
                                notice_id INT4,
                                contract_id INT4,
                                title text,
                                estimated_value_amount INT8,
                                estimated_value_currency text,
                                bulletin_issue_id INT4,
                                notice_type_id INT4,
                                short_description text,
                                total_final_value_amount INT8,
                                total_final_value_currency text,
                                body text
                       );
                       CREATE INDEX ON Notices(eid);
                       CREATE INDEX ON Notices(notice_id);
                       CREATE INDEX ON Notices(supplier_eid);
                       CREATE UNIQUE INDEX ON Notices(contract_id);
                       CREATE INDEX ON Notices(bulletin_issue_id)
                    "

4_notice_bulletins:
    source_schema: "ekosystem_VVO"
    command:   "select id as bulletin_id,year,number,published_on,source_url from bulletin_issues"
    no_entity_id: true
    tables:
            NoticeBulletins:
                    columns: ["bulletin_id", "year", "number", "published_on", "source_url"]
                    create_command: "
                       CREATE TABLE NoticeBulletins (
                                id SERIAL PRIMARY KEY,
                                bulletin_id INT4,
                                year INT4,
                                number INT4,
                                published_on DATE,
                                source_url text
                       );
                       CREATE INDEX ON NoticeBulletins(bulletin_id)
                    "

5_company_financials:
    source_schema: "finstat"
    command:   "select CAST(ico as bigint),nazov as name,CAST(CAST(nullif(trzby_2017,'') as float) as bigint) as revenue_2017, CAST(CAST(nullif(trzby_2016,'') as float) as bigint) as revenue_2016, CAST(CAST(nullif(trzby_2015,'') as float) as bigint) as revenue_2015, CAST(CAST(nullif(trzby_2014,'') as float) as bigint) as revenue_2014, CAST(CAST(nullif(zisk_2017,'') as float) as bigint) as profit_2017, CAST(CAST(nullif(zisk_2016,'') as float) as bigint) as profit_2016, CAST(CAST(nullif(zisk_2015,'') as float) as bigint) as profit_2015, CAST(CAST(nullif(zisk_2014,'') as float) as bigint) as profit_2014, kategoria_poctu_zamestnancov_2016 as employees_2016, kategoria_poctu_zamestnancov_2015 as employees_2015, kategoria_poctu_zamestnancov_2014 as employees_2014 from company_stats"
    tables:
            CompanyFinancials:
                    columns: ["revenue", "profit", "employees"]
                    years: [2014, 2015, 2016, 2017]
                    create_command: "
                       CREATE TABLE CompanyFinancials (
                                id SERIAL PRIMARY KEY,
                                eid INTEGER REFERENCES Entities(id),
                                year INT4,
                                revenue INT8,
                                profit INT8,
                                employees text
                       );
                       CREATE INDEX ON CompanyFinancials(eid);
                       CREATE UNIQUE INDEX ON CompanyFinancials(eid,year);
                    "

6_contracts:
    source_schema: "ekosystem_CRZ"
    command:   "select id as contract_id, contract_identifier, contract_price_amount, contract_price_total_amount, signed_on, effective_from, effective_to, status_id, contracting_authority_name as name, contracting_authority_formatted_address as address, contracting_authority_cin as ico, supplier_name, supplier_cin as supplier_ico, supplier_formatted_address as supplier_address from contracts"
    supplier_eid: true
    tables:
            Contracts:
                    columns: ["contract_price_amount", "contract_price_total_amount",
                    "signed_on", "effective_from", "effective_to", "status_id", "contract_id",
                    "contract_identifier"]
                    create_command: "
                       CREATE TABLE Contracts (
                                id SERIAL PRIMARY KEY,
                                eid INTEGER REFERENCES Entities(id),
                                supplier_eid INTEGER REFERENCES Entities(id),
                                contract_price_amount numeric,
                                contract_price_total_amount numeric,
                                signed_on date,
                                effective_from date,
                                effective_to date,
                                status_id INT4,
                                contract_id INT8,
                                contract_identifier text
                       );
                       CREATE INDEX ON Contracts(eid);
                       CREATE INDEX ON Contracts(supplier_eid);
                       CREATE INDEX ON Contracts(contract_id);
                    "

7_eufunds:
    source_schema: "KamIduEurofondy"
    command: "select subject_title as name, CAST(nullif(subject_company_no,'') as bigint) as ico, title, description, link, CAST(nullif(price,'') as numeric) as price, state, call_state, call_title from kamidueurofondy"
    tables:
        EUFunds:
            columns: ["title", "description", "link", "price", "state", "call_state", "call_title"]
            strip_html: ["description"]
            create_command: "
                       CREATE TABLE EUFunds (
                                id SERIAL PRIMARY KEY,
                                eid INTEGER REFERENCES Entities(id),
                                title text,
                                description text,
                                link text,
                                price numeric,
                                state text,
                                call_state text,
                                call_title text
                       );
                       CREATE INDEX ON EUFunds(eid);
                       CREATE UNIQUE INDEX ON EUFunds(eid,link,price);
                    "

8_stakeholder_types:
    source_schema: "ekosystem_rpo"
    command:   "select id as stakeholder_type_id, name as stakeholder_type_text from stakeholder_types"
    no_entity_id: true
    tables:
            StakeholderTypes:
                    columns: ["stakeholder_type_id", "stakeholder_type_text"]
                    create_command: "
                       CREATE TABLE StakeholderTypes (
                                id SERIAL PRIMARY KEY,
                                stakeholder_type_id INT4,
                                stakeholder_type_text text
                       );
                       CREATE INDEX ON StakeholderTypes(stakeholder_type_id)
                    "

9_profil_mapping:
    source_schema: "internal_profil"
    command: "select persons.id as profil_id,concat_ws(' ', persons.firstname, persons.surname) as name, concat_ws(' ', addresses.street, addresses.houseno, addresses.municipality, addresses.state) as address, null as ico from persons join personaddresses on personaddresses.personid = persons.id join addresses on addresses.id = personaddresses.addressid"
    tables:
            ProfilMapping:
                     columns: ["profil_id"]
                     create_command: "
                       CREATE TABLE ProfilMapping (
                                id SERIAL PRIMARY KEY,
                                eid INTEGER REFERENCES Entities(id),
                                profil_id INTEGER
                       );
                       CREATE INDEX ON ProfilMapping(eid);
                       CREATE INDEX ON ProfilMapping(profil_id);
                       CREATE UNIQUE INDEX ON ProfilMapping(eid, profil_id);
                       REFRESH MATERIALIZED VIEW entities_search;
                    "
